# Do not build on tags (GitHub and BitBucket)
skip_tags: true

# Build worker image (VM template)
image: Ubuntu

# clone directory
clone_folder: /home/work

# build platform, i.e. x86, x64, Any CPU. This setting is optional.
platform: x64

# build cache to preserve files/folders between builds
cache:
  - aptcache

# build commands
build_script:
  - mkdir -p aptcache
  - mkdir -p resultat
  - if [ ! -z "$APPVEYOR_PULL_REQUEST_HEAD_COMMIT" ]; then commit="$APPVEYOR_PULL_REQUEST_HEAD_COMMIT"; else commit="$APPVEYOR_REPO_COMMIT"; fi
  - git diff-tree --no-commit-id --name-only -r "$commit"
  - docker pull jpcima/librazik-2-automate:amd64
  - conteneur=$(sudo docker run --privileged -d -i -t -v /home:/home -v "$(pwd)"/aptcache:/var/cache/pbuilder/aptcache -v "$(pwd)"/resultat:/var/cache/pbuilder/result jpcima/librazik-2-automate:amd64 /bin/bash)
  - sudo docker exec --privileged -w "$(pwd)" -t "$conteneur" /bin/bash -c 'echo APTCACHEHARDLINK="no" >> /etc/pbuilderrc'
  - sudo docker exec --privileged -w "$(pwd)" -t "$conteneur" /bin/bash outils/construire-paquets-commit.sh "$commit"
  - docker pull jpcima/librazik-2-automate:i386
  - conteneur=$(sudo docker run --privileged -d -i -t -v /home:/home -v "$(pwd)"/aptcache:/var/cache/pbuilder/aptcache -v "$(pwd)"/resultat:/var/cache/pbuilder/result jpcima/librazik-2-automate:i386 /bin/bash)
  - sudo docker exec --privileged -w "$(pwd)" -t "$conteneur" /bin/bash -c 'echo APTCACHEHARDLINK="no" >> /etc/pbuilderrc'
  - sudo docker exec --privileged -w "$(pwd)" -t "$conteneur" /bin/bash outils/construire-paquets-commit.sh "$commit"

# artifact files to save
artifacts:
  - path: resultat
